name: CI CD Pipeline

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.github/CODEOWNERS'
      - '.gitignore'
      - 'LICENSE.md'
      - 'README.md'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '.github/CODEOWNERS'
      - '.gitignore'
      - 'LICENSE.md'
      - 'README.md'
  workflow_dispatch:
    inputs:
      isDeploy:
        description: 'デプロイするかどうか'
        type: choice
        required: true
        options:
          - 'true'
          - 'false'

permissions:
  packages: write
  contents: write

env:
  TZ: 'Asia/Tokyo'

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      isDeploy: ${{ steps.filter.outputs.isDeploy }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Filter
        if: ${{ github.event_name == 'push' }}
        id: filter
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            isDeploy:
              - 'build.gradle.kts'
              - 'gara-photo-app-server/**'

      - name: Display in summary
        run: |
          echo "- Deploy: ${{ steps.filter.outputs.isDeploy }}" >> $GITHUB_STEP_SUMMARY

  detekt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Run detekt
        run: ./gradlew clean detekt

  konsist_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Run konsist test
        working-directory: konsist-test
        run: ../gradlew clean test

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Run unit test
        working-directory: gara-photo-app-server
        run: ../gradlew clean test

  build_and_upload_jar_file:
    needs:
      - filter
      - detekt
      - konsist_test
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Build jar file
        working-directory: gara-photo-app-server
        run: ../gradlew clean build -x test

      - name: Upload Dockerfile and jar file
        uses: actions/upload-artifact@v4.6.2
        with:
          name: jar-and-Dockerfile
          path: |
            gara-photo-app-server/Dockerfile
            gara-photo-app-server/build/libs/gara-photo-app-server-0.0.1-SNAPSHOT.jar

  integration_test:
    needs: build_and_upload_jar_file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.7.1
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'

      - name: Download Dockerfile and jar file
        uses: actions/download-artifact@v4.2.1
        with:
          name: jar-and-Dockerfile
          path: gara-photo-app-server

      - name: Run integration test
        working-directory: integration-test
        run: ../gradlew clean integrationTest

  create_git_tag:
    if: ${{ needs.filter.outputs.isDeploy == 'true' || inputs.isDeploy == 'true' }}
    needs: integration_test
    runs-on: ubuntu-latest
    outputs:
      tagName: ${{ steps.create_tag.outputs.tagName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Create git tag
        id: create_tag
        run: |
          TAG_NAME=2.1.$(date +%Y%m%d%H%M%S)
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "tagName=$TAG_NAME" >> $GITHUB_OUTPUT

  build_and_push_docker_image:
    needs: create_git_tag
    runs-on: ubuntu-latest
    steps:
      - name: Download Dockerfile and jar file
        uses: actions/download-artifact@v4.2.1
        with:
          name: jar-and-Dockerfile

      - name: Login to GitHub container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build \
          --tag ghcr.io/$GITHUB_ACTOR/gara-photo-app-server:latest \
          --tag ghcr.io/$GITHUB_ACTOR/gara-photo-app-server:${{ needs.create_git_tag.outputs.tagName }} .

      - name: Push docker image
        run: |
          docker push ghcr.io/$GITHUB_ACTOR/gara-photo-app-server:latest
          docker push ghcr.io/$GITHUB_ACTOR/gara-photo-app-server:${{ needs.create_git_tag.outputs.tagName }}
